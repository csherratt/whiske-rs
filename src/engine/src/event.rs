
use glutin::{self, Event};

#[derive(Copy, Clone, PartialEq, Debug)]
pub enum Button {
    Key1,
    Key2,
    Key3,
    Key4,
    Key5,
    Key6,
    Key7,
    Key8,
    Key9,
    Key0,
    A,
    B,
    C,
    D,
    E,
    F,
    G,
    H,
    I,
    J,
    K,
    L,
    M,
    N,
    O,
    P,
    Q,
    R,
    S,
    T,
    U,
    V,
    W,
    X,
    Y,
    Z,
    Escape,
    F1,
    F2,
    F3,
    F4,
    F5,
    F6,
    F7,
    F8,
    F9,
    F10,
    F11,
    F12,
    F13,
    F14,
    F15,
    Snapshot,
    Scroll,
    Pause,
    Insert,
    Home,
    Delete,
    End,
    PageDown,
    PageUp,
    Left,
    Up,
    Right,
    Down,
    Back,
    Return,
    Space,
    Numlock,
    Numpad0,
    Numpad1,
    Numpad2,
    Numpad3,
    Numpad4,
    Numpad5,
    Numpad6,
    Numpad7,
    Numpad8,
    Numpad9,
    AbntC1,
    AbntC2,
    Add,
    Apostrophe,
    Apps,
    At,
    Ax,
    Backslash,
    Calculator,
    Capital,
    Colon,
    Comma,
    Convert,
    Decimal,
    Divide,
    Equals,
    Grave,
    Kana,
    Kanji,
    LAlt,
    LBracket,
    LControl,
    LMenu,
    LShift,
    LWin,
    Mail,
    MediaSelect,
    MediaStop,
    Minus,
    Multiply,
    Mute,
    MyComputer,
    NextTrack,
    NoConvert,
    NumpadComma,
    NumpadEnter,
    NumpadEquals,
    OEM102,
    Period,
    PlayPause,
    Power,
    PrevTrack,
    RAlt,
    RBracket,
    RControl,
    RMenu,
    RShift,
    RWin,
    Semicolon,
    Slash,
    Sleep,
    Stop,
    Subtract,
    Sysrq,
    Tab,
    Underline,
    Unlabeled,
    VolumeDown,
    VolumeUp,
    Wake,
    WebBack,
    WebFavorites,
    WebForward,
    WebHome,
    WebRefresh,
    WebSearch,
    WebStop,
    Yen,

    MouseLeft,
    MouseMiddle,
    MouseRight,
    Mouse0,
    Mouse1,
    Mouse2,
    Mouse3,
    Mouse4,
    Mouse5,
    Mouse6,
    Mouse7,
    Mouse8,
    Mouse9,
}

impl Button {
    fn from_glutin_mouse(m: glutin::MouseButton) -> Option<Button> {
        match m {
            glutin::MouseButton::Left => Some(Button::MouseLeft),
            glutin::MouseButton::Middle => Some(Button::MouseMiddle),
            glutin::MouseButton::Right => Some(Button::MouseRight),
            glutin::MouseButton::Other(0) => Some(Button::Mouse0),
            glutin::MouseButton::Other(1) => Some(Button::Mouse1),
            glutin::MouseButton::Other(2) => Some(Button::Mouse2),
            glutin::MouseButton::Other(3) => Some(Button::Mouse3),
            glutin::MouseButton::Other(4) => Some(Button::Mouse4),
            glutin::MouseButton::Other(5) => Some(Button::Mouse5),
            glutin::MouseButton::Other(6) => Some(Button::Mouse6),
            glutin::MouseButton::Other(7) => Some(Button::Mouse7),
            glutin::MouseButton::Other(8) => Some(Button::Mouse8),
            glutin::MouseButton::Other(9) => Some(Button::Mouse9),
            _ => None
        }
    }

    fn from_glutin(k: glutin::VirtualKeyCode) -> Button {
        match k {
            glutin::VirtualKeyCode::Key1 => Button::Key1,
            glutin::VirtualKeyCode::Key2 => Button::Key2,
            glutin::VirtualKeyCode::Key3 => Button::Key3,
            glutin::VirtualKeyCode::Key4 => Button::Key4,
            glutin::VirtualKeyCode::Key5 => Button::Key5,
            glutin::VirtualKeyCode::Key6 => Button::Key6,
            glutin::VirtualKeyCode::Key7 => Button::Key7,
            glutin::VirtualKeyCode::Key8 => Button::Key8,
            glutin::VirtualKeyCode::Key9 => Button::Key9,
            glutin::VirtualKeyCode::Key0 => Button::Key0,
            glutin::VirtualKeyCode::A => Button::A,
            glutin::VirtualKeyCode::B => Button::B,
            glutin::VirtualKeyCode::C => Button::C,
            glutin::VirtualKeyCode::D => Button::D,
            glutin::VirtualKeyCode::E => Button::E,
            glutin::VirtualKeyCode::F => Button::F,
            glutin::VirtualKeyCode::G => Button::G,
            glutin::VirtualKeyCode::H => Button::H,
            glutin::VirtualKeyCode::I => Button::I,
            glutin::VirtualKeyCode::J => Button::J,
            glutin::VirtualKeyCode::K => Button::K,
            glutin::VirtualKeyCode::L => Button::L,
            glutin::VirtualKeyCode::M => Button::M,
            glutin::VirtualKeyCode::N => Button::N,
            glutin::VirtualKeyCode::O => Button::O,
            glutin::VirtualKeyCode::P => Button::P,
            glutin::VirtualKeyCode::Q => Button::Q,
            glutin::VirtualKeyCode::R => Button::R,
            glutin::VirtualKeyCode::S => Button::S,
            glutin::VirtualKeyCode::T => Button::T,
            glutin::VirtualKeyCode::U => Button::U,
            glutin::VirtualKeyCode::V => Button::V,
            glutin::VirtualKeyCode::W => Button::W,
            glutin::VirtualKeyCode::X => Button::X,
            glutin::VirtualKeyCode::Y => Button::Y,
            glutin::VirtualKeyCode::Z => Button::Z,
            glutin::VirtualKeyCode::Escape => Button::Escape,
            glutin::VirtualKeyCode::F1 => Button::F1,
            glutin::VirtualKeyCode::F2 => Button::F2,
            glutin::VirtualKeyCode::F3 => Button::F3,
            glutin::VirtualKeyCode::F4 => Button::F4,
            glutin::VirtualKeyCode::F5 => Button::F5,
            glutin::VirtualKeyCode::F6 => Button::F6,
            glutin::VirtualKeyCode::F7 => Button::F7,
            glutin::VirtualKeyCode::F8 => Button::F8,
            glutin::VirtualKeyCode::F9 => Button::F9,
            glutin::VirtualKeyCode::F10 => Button::F10,
            glutin::VirtualKeyCode::F11 => Button::F11,
            glutin::VirtualKeyCode::F12 => Button::F12,
            glutin::VirtualKeyCode::F13 => Button::F13,
            glutin::VirtualKeyCode::F14 => Button::F14,
            glutin::VirtualKeyCode::F15 => Button::F15,
            glutin::VirtualKeyCode::Snapshot => Button::Snapshot,
            glutin::VirtualKeyCode::Scroll => Button::Scroll,
            glutin::VirtualKeyCode::Pause => Button::Pause,
            glutin::VirtualKeyCode::Insert => Button::Insert,
            glutin::VirtualKeyCode::Home => Button::Home,
            glutin::VirtualKeyCode::Delete => Button::Delete,
            glutin::VirtualKeyCode::End => Button::End,
            glutin::VirtualKeyCode::PageDown => Button::PageDown,
            glutin::VirtualKeyCode::PageUp => Button::PageUp,
            glutin::VirtualKeyCode::Left => Button::Left,
            glutin::VirtualKeyCode::Up => Button::Up,
            glutin::VirtualKeyCode::Right => Button::Right,
            glutin::VirtualKeyCode::Down => Button::Down,
            glutin::VirtualKeyCode::Back => Button::Back,
            glutin::VirtualKeyCode::Return => Button::Return,
            glutin::VirtualKeyCode::Space => Button::Space,
            glutin::VirtualKeyCode::Numlock => Button::Numlock,
            glutin::VirtualKeyCode::Numpad0 => Button::Numpad0,
            glutin::VirtualKeyCode::Numpad1 => Button::Numpad1,
            glutin::VirtualKeyCode::Numpad2 => Button::Numpad2,
            glutin::VirtualKeyCode::Numpad3 => Button::Numpad3,
            glutin::VirtualKeyCode::Numpad4 => Button::Numpad4,
            glutin::VirtualKeyCode::Numpad5 => Button::Numpad5,
            glutin::VirtualKeyCode::Numpad6 => Button::Numpad6,
            glutin::VirtualKeyCode::Numpad7 => Button::Numpad7,
            glutin::VirtualKeyCode::Numpad8 => Button::Numpad8,
            glutin::VirtualKeyCode::Numpad9 => Button::Numpad9,
            glutin::VirtualKeyCode::AbntC1 => Button::AbntC1,
            glutin::VirtualKeyCode::AbntC2 => Button::AbntC2,
            glutin::VirtualKeyCode::Add => Button::Add,
            glutin::VirtualKeyCode::Apostrophe => Button::Apostrophe,
            glutin::VirtualKeyCode::Apps => Button::Apps,
            glutin::VirtualKeyCode::At => Button::At,
            glutin::VirtualKeyCode::Ax => Button::Ax,
            glutin::VirtualKeyCode::Backslash => Button::Backslash,
            glutin::VirtualKeyCode::Calculator => Button::Calculator,
            glutin::VirtualKeyCode::Capital => Button::Capital,
            glutin::VirtualKeyCode::Colon => Button::Colon,
            glutin::VirtualKeyCode::Comma => Button::Comma,
            glutin::VirtualKeyCode::Convert => Button::Convert,
            glutin::VirtualKeyCode::Decimal => Button::Decimal,
            glutin::VirtualKeyCode::Divide => Button::Divide,
            glutin::VirtualKeyCode::Equals => Button::Equals,
            glutin::VirtualKeyCode::Grave => Button::Grave,
            glutin::VirtualKeyCode::Kana => Button::Kana,
            glutin::VirtualKeyCode::Kanji => Button::Kanji,
            glutin::VirtualKeyCode::LAlt => Button::LAlt,
            glutin::VirtualKeyCode::LBracket => Button::LBracket,
            glutin::VirtualKeyCode::LControl => Button::LControl,
            glutin::VirtualKeyCode::LMenu => Button::LMenu,
            glutin::VirtualKeyCode::LShift => Button::LShift,
            glutin::VirtualKeyCode::LWin => Button::LWin,
            glutin::VirtualKeyCode::Mail => Button::Mail,
            glutin::VirtualKeyCode::MediaSelect => Button::MediaSelect,
            glutin::VirtualKeyCode::MediaStop => Button::MediaStop,
            glutin::VirtualKeyCode::Minus => Button::Minus,
            glutin::VirtualKeyCode::Multiply => Button::Multiply,
            glutin::VirtualKeyCode::Mute => Button::Mute,
            glutin::VirtualKeyCode::MyComputer => Button::MyComputer,
            glutin::VirtualKeyCode::NextTrack => Button::NextTrack,
            glutin::VirtualKeyCode::NoConvert => Button::NoConvert,
            glutin::VirtualKeyCode::NumpadComma => Button::NumpadComma,
            glutin::VirtualKeyCode::NumpadEnter => Button::NumpadEnter,
            glutin::VirtualKeyCode::NumpadEquals => Button::NumpadEquals,
            glutin::VirtualKeyCode::OEM102 => Button::OEM102,
            glutin::VirtualKeyCode::Period => Button::Period,
            glutin::VirtualKeyCode::Power => Button::Power,
            glutin::VirtualKeyCode::RAlt => Button::RAlt,
            glutin::VirtualKeyCode::RBracket => Button::RBracket,
            glutin::VirtualKeyCode::RControl => Button::RControl,
            glutin::VirtualKeyCode::RMenu => Button::RMenu,
            glutin::VirtualKeyCode::RShift => Button::RShift,
            glutin::VirtualKeyCode::RWin => Button::RWin,
            glutin::VirtualKeyCode::Semicolon => Button::Semicolon,
            glutin::VirtualKeyCode::Slash => Button::Slash,
            glutin::VirtualKeyCode::Sleep => Button::Sleep,
            glutin::VirtualKeyCode::Stop => Button::Stop,
            glutin::VirtualKeyCode::Subtract => Button::Subtract,
            glutin::VirtualKeyCode::Sysrq => Button::Sysrq,
            glutin::VirtualKeyCode::Tab => Button::Tab,
            glutin::VirtualKeyCode::Underline => Button::Underline,
            glutin::VirtualKeyCode::Unlabeled => Button::Unlabeled,
            glutin::VirtualKeyCode::VolumeDown => Button::VolumeDown,
            glutin::VirtualKeyCode::VolumeUp => Button::VolumeUp,
            glutin::VirtualKeyCode::Wake => Button::Wake,
            glutin::VirtualKeyCode::WebFavorites => Button::WebFavorites,
            glutin::VirtualKeyCode::WebForward => Button::WebForward,
            glutin::VirtualKeyCode::WebHome => Button::WebHome,
            glutin::VirtualKeyCode::WebRefresh => Button::WebRefresh,
            glutin::VirtualKeyCode::WebSearch => Button::WebSearch,
            glutin::VirtualKeyCode::WebStop => Button::WebStop,
            glutin::VirtualKeyCode::Yen => Button::Yen,
            glutin::VirtualKeyCode::PlayPause => Button::PlayPause,
            glutin::VirtualKeyCode::PrevTrack => Button::PrevTrack,
            glutin::VirtualKeyCode::WebBack => Button::WebBack,
        }   
    }
}

#[derive(Copy, Clone, PartialEq, Debug)]
pub enum WindowEvent {
    TimeStamp(f64),
    Pos(i32, i32),
    Size(u32, u32),
    Close,
    Focus(bool),
    Iconify(bool),
    ButtonDown(Button),
    ButtonUp(Button),
    CursorPos(f64, f64),
    CursorEnter(bool),
    Char(char),
}

impl WindowEvent {
    pub fn from_glutin(event: Event) -> Option<WindowEvent> {
       match event {
            Event::Moved(x, y) => Some(WindowEvent::Pos(x, y)),
            Event::Resized(w, h) => Some(WindowEvent::Size(w, h)),
            Event::Closed => Some(WindowEvent::Close),
            Event::Focused(focus) => Some(WindowEvent::Focus(focus)),
            Event::MouseInput(glutin::ElementState::Pressed, b) => {
                Button::from_glutin_mouse(b).map(|x| WindowEvent::ButtonDown(x))
            }
            Event::MouseInput(glutin::ElementState::Released, b) => {
                Button::from_glutin_mouse(b).map(|x| WindowEvent::ButtonUp(x))
            }
            Event::MouseMoved((x, y)) => Some(WindowEvent::CursorPos(x as f64, y as f64)),
            Event::KeyboardInput(glutin::ElementState::Pressed, _, Some(b)) => {
                Some(WindowEvent::ButtonDown(Button::from_glutin(b)))
            }
            Event::KeyboardInput(glutin::ElementState::Released, _, Some(b)) => {
                Some(WindowEvent::ButtonUp(Button::from_glutin(b)))
            }
            Event::ReceivedCharacter(c) => Some(WindowEvent::Char(c)),
            _ => None
       } 
    }
}